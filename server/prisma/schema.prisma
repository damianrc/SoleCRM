generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  passwordHash    String
  contacts    Contact[]
  tasks       Task[]

  @@map("users")
}

model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String?
  phone     String?
  address   String?
  status    ContactStatus @default(NEW)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  userId      String
  user        User?     @relation(fields: [userId], references: [id])

  // Relations
  customFields ContactCustomField[]
  tasks        Task[]
  notes        Note[]
  activities   Activity[]
  @@map("contacts")
}

model ContactCustomField {
  id        String @id @default(cuid())
  contactId String
  fieldName String
  fieldValue String
  fieldType CustomFieldType @default(TEXT)
  contact   Contact @relation(fields: [contactId], references: [id], onDelete: Cascade)
  
  @@map("contact_custom_fields")
}

model Task {
  id          String     @id @default(cuid())
  contactId   String
  title       String
  description String?
  status      TaskStatus @default(PENDING)
  priority    TaskPriority @default(MEDIUM)
  dueDate     DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  contact     Contact    @relation(fields: [contactId], references: [id], onDelete: Cascade)

  userId      String
  user        User       @relation(fields: [userId], references: [id])

  @@map("tasks")
}

model Note {
  id        String   @id @default(cuid())
  contactId String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  contact   Contact  @relation(fields: [contactId], references: [id], onDelete: Cascade)

  @@map("notes")
}

model Activity {
  id          String       @id @default(cuid())
  contactId   String
  type        ActivityType
  title       String
  description String?
  createdAt   DateTime     @default(now())

  contact     Contact      @relation(fields: [contactId], references: [id], onDelete: Cascade)

  @@map("activities")
}

enum ContactStatus {
  NEW
  CONTACTED
  QUALIFIED
  PROPOSAL
  NEGOTIATION
  CLOSED_WON
  CLOSED_LOST
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

enum TaskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum ActivityType {
  CALL
  EMAIL
  MEETING
  NOTE
  TASK_CREATED
  TASK_COMPLETED
  STATUS_CHANGED
}

enum CustomFieldType {
  TEXT
  NUMBER
  EMAIL
  PHONE
  DATE
  BOOLEAN
}